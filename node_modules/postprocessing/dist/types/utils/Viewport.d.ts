import { Vector4Like } from "three";
import { Resolution } from "./Resolution.js";
/**
 * A viewport.
 *
 * @category Utils
 */
export declare class Viewport extends Resolution implements Vector4Like {
    /**
     * The offset in logical pixels.
     */
    private offset;
    /**
     * The effective offset.
     */
    private effectiveOffset;
    /**
     * @see {@link enabled}
     */
    private _enabled;
    /**
     * Constructs a new viewport.
     */
    constructor();
    /**
     * Calculates the effective offset.
     */
    private updateEffectiveOffset;
    /**
     * Indicates whether this viewport is enabled.
     *
     * @defaultValue false
     */
    get enabled(): boolean;
    set enabled(value: boolean);
    /**
     * The effective offset along the X-axis, calculated based on the scale and pixel ratio.
     *
     * @defaultValue 0
     */
    get offsetX(): number;
    /**
     * The effective offset along the Y-axis, calculated based on the scale and pixel ratio.
     *
     * @defaultValue 0
     */
    get offsetY(): number;
    /**
     * Sets the offset in logical pixels.
     *
     * @param x - The X-offset.
     * @param y - The Y-offset.
     */
    setOffset(x: number, y: number): void;
    /**
     * Sets the offset and the preferred size in logical pixels.
     *
     * If the width and height are omitted, x and y will be used for the size instead.
     *
     * @param x - The X-offset.
     * @param y - The Y-offset.
     * @param width - The width.
     * @param height - The height.
     */
    set(x: number, y: number, width?: number, height?: number): void;
    copy(viewport: Viewport | Resolution): void;
    equals(viewport: Viewport): boolean;
    get x(): number;
    get y(): number;
    get z(): number;
    get w(): number;
}
