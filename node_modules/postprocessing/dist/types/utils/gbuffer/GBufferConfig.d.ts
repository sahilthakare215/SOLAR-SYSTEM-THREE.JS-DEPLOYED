import { EventDispatcher } from "three";
import { BaseEventMap } from "../../core/BaseEventMap.js";
import { GBuffer } from "../../enums/GBuffer.js";
import { GData } from "../../enums/GData.js";
import { GBufferTextureConfig } from "./GBufferTextureConfig.js";
/**
 * A G-Buffer configuration.
 *
 * @category Utils
 */
export declare class GBufferConfig extends EventDispatcher<BaseEventMap> {
    /**
     * A collection that maps G-Buffer components to G-Buffer texture configurations.
     */
    readonly textureConfigs: Map<GBuffer | string, GBufferTextureConfig>;
    /**
     * A collection that maps G-Buffer components to G-Buffer struct field names that are used in effects.
     */
    readonly gBufferStructFields: Map<GBuffer | string, string>;
    /**
     * A collection that maps G-Data to shader code that declares the G-Buffer struct.
     */
    readonly gBufferStructDeclaration: Map<GData | string, string>;
    /**
     * A collection that maps G-Data to shader code that declares the G-Data struct.
     */
    readonly gDataStructDeclaration: Map<GData | string, string>;
    /**
     * A collection that maps G-Data to shader code that fills the respective G-Data struct field.
     */
    readonly gDataStructInitialization: Map<GData | string, string>;
    /**
     * A collection that describes G-Data interdependencies.
     */
    readonly gDataDependencies: Map<GData | string, Set<GData | string>>;
    /**
     * A collection that describes which G-Buffer components are required for the G-Data.
     */
    readonly gDataBufferSources: Map<GData | string, Set<GBuffer | string>>;
    /**
     * Constructs a new G-Buffer config.
     */
    constructor();
}
