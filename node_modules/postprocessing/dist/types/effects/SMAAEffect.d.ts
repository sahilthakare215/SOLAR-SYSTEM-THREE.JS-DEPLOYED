import { OrthographicCamera, PerspectiveCamera } from "three";
import { TextureResource } from "../core/io/TextureResource.js";
import { SMAAEdgeDetectionMode } from "../enums/SMAAEdgeDetectionMode.js";
import { SMAAPredicationMode } from "../enums/SMAAPredicationMode.js";
import { SMAAPreset } from "../enums/SMAAPreset.js";
import { SMAAEdgeDetectionMaterial } from "../materials/SMAAEdgeDetectionMaterial.js";
import { SMAAWeightsMaterial } from "../materials/SMAAWeightsMaterial.js";
import { Effect } from "./Effect.js";
/**
 * SMAAEffect options.
 *
 * @category Effects
 */
export interface SMAAEffectOptions {
    /**
     * The quality preset.
     *
     * @defaultValue {@link SMAAPreset.MEDIUM}
     */
    preset?: SMAAPreset | null;
    /**
     * The edge detection mode.
     *
     * @defaultValue {@link SMAAEdgeDetectionMode.COLOR}
     */
    edgeDetectionMode?: SMAAEdgeDetectionMode;
    /**
     * The predication mode.
     *
     * @defaultValue {@link SMAAPredicationMode.DEPTH}
     */
    predicationMode?: SMAAPredicationMode;
}
/**
 * Subpixel Morphological Antialiasing (SMAA).
 *
 * @see https://github.com/iryoku/smaa/releases/tag/v2.8
 * @category Effects
 */
export declare class SMAAEffect extends Effect implements SMAAEffectOptions {
    /**
     * Identifies the SMAA edges buffer.
     */
    private static readonly BUFFER_EDGES;
    /**
     * Identifies the SMAA weights buffer.
     */
    private static readonly BUFFER_WEIGHTS;
    /**
    * A clear pass for the edges buffer.
    */
    private clearPass;
    /**
    * An edge detection pass.
    */
    private edgeDetectionPass;
    /**
    * An SMAA weights pass.
    */
    private weightsPass;
    /**
     * Constructs a new SMAA effect.
     *
     * @param options - The options.
     */
    constructor({ preset, edgeDetectionMode, predicationMode }?: SMAAEffectOptions);
    get camera(): OrthographicCamera | PerspectiveCamera | null;
    set camera(value: OrthographicCamera | PerspectiveCamera | null);
    /**
     * A render target for the SMAA edge detection.
     */
    private get renderTargetEdges();
    /**
     * A render target for the SMAA edge weights.
     */
    private get renderTargetWeights();
    /**
     * The edges texture.
     */
    get edgesTexture(): TextureResource;
    /**
     * The edge weights texture.
     */
    get weightsTexture(): TextureResource;
    /**
     * The edge detection material.
     */
    get edgeDetectionMaterial(): SMAAEdgeDetectionMaterial;
    get edgeDetectionMode(): SMAAEdgeDetectionMode;
    set edgeDetectionMode(value: SMAAEdgeDetectionMode);
    get predicationMode(): SMAAPredicationMode;
    set predicationMode(value: SMAAPredicationMode);
    /**
     * The edge weights material.
     */
    get weightsMaterial(): SMAAWeightsMaterial;
    /**
     * Loads the SMAA lookup textures.
     */
    private loadTextures;
    /**
     * Applies the given quality preset.
     *
     * @param preset - The preset.
     */
    applyPreset(preset: SMAAPreset | null): void;
    protected onInputChange(): void;
    protected onResolutionChange(): void;
    render(): void;
}
