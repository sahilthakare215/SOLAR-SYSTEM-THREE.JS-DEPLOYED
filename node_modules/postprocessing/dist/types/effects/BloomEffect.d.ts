import { LuminancePass } from "../passes/LuminancePass.js";
import { MipmapBlurPass, MipmapBlurPassOptions } from "../passes/MipmapBlurPass.js";
import { LuminanceHighPassMaterial } from "../materials/LuminanceHighPassMaterial.js";
import { Effect } from "./Effect.js";
/**
 * BloomEffect options.
 *
 * @category Effects
 */
export interface BloomEffectOptions extends MipmapBlurPassOptions {
    /**
     * The luminance threshold. Raise this value to mask out darker elements in the scene.
     *
     * @defaultValue 1
     */
    luminanceThreshold?: number;
    /**
     * Controls the smoothness of the luminance threshold.
     *
     * @defaultValue 0.03
     */
    luminanceSmoothing?: number;
    /**
     * The bloom intensity.
     *
     * @defaultValue 1
     */
    intensity?: number;
}
/**
 * A bloom effect.
 *
 * Based on an article by Fabrice Piquet.
 *
 * @see https://www.froyok.fr/blog/2021-12-ue4-custom-bloom/
 * @category Effects
 */
export declare class BloomEffect extends Effect implements BloomEffectOptions {
    /**
     * A luminance pass.
     */
    readonly luminancePass: LuminancePass;
    /**
     * A mipmap blur pass.
     */
    readonly mipmapBlurPass: MipmapBlurPass;
    /**
     * Constructs a new bloom effect.
     *
     * @param options - The options.
     */
    constructor({ luminanceThreshold, luminanceSmoothing, intensity, radius, levels, fullResolutionUpsampling, clampToBorder }?: BloomEffectOptions);
    /**
     * The luminance high-pass material.
     */
    get luminanceMaterial(): LuminanceHighPassMaterial;
    get luminanceThreshold(): number;
    set luminanceThreshold(value: number);
    get luminanceSmoothing(): number;
    set luminanceSmoothing(value: number);
    get intensity(): number;
    set intensity(value: number);
    protected onInputChange(): void;
    render(): void;
}
