import { Disposable } from "../Disposable.js";
import { Resource } from "./Resource.js";
/**
 * A wrapper base class for disposable resources.
 *
 * This wrapper automatically disposes resources when they are no longer referenced by any wrapper.
 *
 * @param T - The type of the internal value.
 * @category IO
 */
export declare abstract class DisposableResource<T extends Disposable | null> extends Resource<T> implements Disposable {
    /**
     * Keeps track of resource references.
     */
    private static readonly references;
    /**
     * Constructs a new disposable resource wrapper.
     *
     * @param value - A resource value.
     */
    constructor(value: T | null);
    get value(): T | null;
    set value(value: T | null);
    dispose(): void;
    /**
     * Decreases the reference count for the given resource.
     *
     * @param resource - A resource.
     */
    private static decreaseReferenceCount;
    /**
     * Increases the reference count for the given resource.
     *
     * @param resource - A resource.
     */
    private static increaseReferenceCount;
}
